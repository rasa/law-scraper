---
# yamllint disable rule:line-length
# $schema https://raw.githubusercontent.com/megalinter/megalinter/main/megalinter/descriptors/schemas/megalinter-configuration.jsonschema.json
# Copied from: rasa/dotfiles/.github/mega-linter-shared.yml
# EDIT THE ABOVE FILE OR YOUR CHANGES WILL BE LOST!

## FILTERS ##

FILTER_REGEX_EXCLUDE: >-
  (?ix)(
    megalinter-reports/ |
    mega-linter.log |
    \.git/
  )

## CONVERT ERRORS TO WARNINGS ##

# produces too many false positives:
COPYPASTE_JSCPD_DISABLE_ERRORS: true

# save error reporting for more important issues:
EDITORCONFIG_EDITORCONFIG_CHECKER_DISABLE_ERRORS: true

# produces too many false positives:
MARKDOWN_MARKDOWN_LINK_CHECK_DISABLE_ERRORS: true

# produces too many false positives:
REPOSITORY_DEVSKIM_DISABLE_ERRORS: true

# whines unless actions use SHAs, instead of version numbers:
REPOSITORY_KICS_DISABLE_ERRORS: true

# .git/config:11
REPOSITORY_TRUFFLEHOG_DISABLE_ERRORS: true

# don't fail if a site is down, or their cert has expired:
SPELL_LYCHEE_DISABLE_ERRORS: true

#
# EDITORCONFIG_EDITORCONFIG_CHECKER_DISABLE_ERRORS

# Reports variable assignment as targets:
# MAKEFILE_CHECKMAKE_DISABLE_ERRORS: true

# Reporting errant whitespace where there is none:
# REPOSITORY_GIT_DIFF_DISABLE_ERRORS: true

## COMMAND ARGUMENTS ##

# https://www.shellcheck.net/wiki/SC2310 :
# This function is invoked in an 'if' condition so set -e will be disabled. Invoke separately if failures should cause the script to exit.
# https://www.shellcheck.net/wiki/SC2312 :
# Consider invoking this command separately to avoid masking its return value (or use '|| true' to ignore).
BASH_SHELLCHECK_ARGUMENTS: "--external-sources --enable=all --exclude SC2310,SC2312"

BASH_SHFMT_ARGUMENTS: "-ci -i 2"

# DL3006 warning: Always tag the version of an image explicitly
# DL3018 warning: Pin versions in apk add. Instead of apk add <package> use apk add <package>=<version>.
DOCKERFILE_HADOLINT_ARGUMENTS: "--style DL3006 --style DL3018" # --failure-threshold error

# allow for comments in json files:
JSON_JSONLINT_ARGUMENTS: "--mode cjson"

# default is .markdownlint.json, but yaml is nicer :)
MARKDOWN_MARKDOWNLINT_CONFIG_FILE: ".github/linters/.markdownlint.yaml"

# Doesn't seem to quiet logs:
PYTHON_MYPY_ARGUMENTS: "--install-types --non-interactive"

# @todo determine default location:
PYTHON_PYRIGHT_ARGUMENTS: "-p .github/linters/.pyrightconfig-loose.json"

# CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
# CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
# CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
REPOSITORY_CHECKOV_ARGUMENTS: "--skip-check CKV2_GHA_1,CKV_DOCKER_2,CKV_DOCKER_7"

# skip .mypy_cache (as it doesn't work when .mypy_cache is included in FILTER_REGEX_EXCLUDE):
REPOSITORY_DEVSKIM_ARGUMENTS:
  ["--ignore-globs", "**/megalinter-reports/**,**/.git/**,**/.mypy_cache/**"]
# megalinter already passes `--skip-git-ignored-files`:
# https://github.com/oxsecurity/megalinter/blob/43943881/megalinter/descriptors/repository.megalinter-descriptor.yml#L78

# this appears to have fixed the issue:
REPOSITORY_GIT_DIFF_ARGUMENTS: "--ignore-space-change" # didn't fix it: --ignore-space-at-eol

#
SPELL_CSPELL_ARGUMENTS: "--words-only --unique"

#
TYPESCRIPT_PRETTIER_CONFIG_FILE: ".github/linters/.prettierrc.yaml"

# I don't know if 2 'verbose's increases verbosity:
YAML_V8R_ARGUMENTS: "--verbose --verbose"

#
YAML_V8R_FILTER_REGEX_EXCLUDE: >-
  (?ix)(
    \.trivyignore
  )

# doesn't provide any helpful info:
# EDITORCONFIG_EDITORCONFIG_CHECKER_ARGUMENTS: '--debug --verbose'

## GLOBAL SETTINGS ##

# When active, APPLY_FIXES must also be defined as environment variable (in github/workflows/mega-linter.yml or other CI
APPLY_FIXES: all # default: none

PRINT_ALPACA: false # default: true

SHOW_ELAPSED_TIME: true # default: false

# needs EMAIL_REPORTER_SMTP_PASSWORD to work:
# EMAIL_REPORTER_EMAIL: ''

# FILEIO_REPORTER: true # default: false

# Quiet logs:
# [GitHub Status Reporter] Error posting Status for JSONwith prettier: 403
# GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
# GITHUB_STATUS_REPORTER: true # default: false

# JSON_REPORTER: true # default: false

# LOG_LEVEL: DEBUG # default: INFO

# PRINT_ALL_FILES: true # default: false

# This error:
#   WARNING: there is a new pyright version available (v1.1.270 -> v1.1.280).
#   Please install the new version or set PYRIGHT_PYTHON_FORCE_VERSION to `latest`
# suggests the below, but including it causes the file to fail validation.
# PYRIGHT_PYTHON_FORCE_VERSION: 'latest'

# REPORT_OUTPUT_FOLDER: '${GITHUB_WORKSPACE}/.cache/mega-linter'

# cSpell:ignore CHECKMAKE, cjson, DEVSKIM, dotfiles, JSONLINT, KICS, MARKDOWNLINT, markdownlint
# cSpell:ignore MYPY, mypy, PROSELINT, PYLINT, PYRIGHT, pyright, pyrightconfig,
# cSpell:ignore SEMGREP, SHELLCHECK, SHFMT, TRIVY, TRUFFLEHOG

# eof
