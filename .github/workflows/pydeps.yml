---
# $schema https://json.schemastore.org/github-workflow.json
# ~/.github/workflows/pydeps.yaml
# checkov:skip=CKV_GHA_7:The build output cannot be affected by user parameters
#   other than the build entry point and the top-level source location.
#   GitHub Actions workflow_dispatch inputs MUST be empty.

name: pydeps

'on':
  schedule:
    # run every day at 15:00 UTC (08:00 PDT)
    - cron: '0 15 * * *'
  workflow_call:
    inputs:
      # checkov:skip=CKV_GHA_7
      dir:
        description: 'Directory containing the requirements.txt file'
        required: false
        type: string
        default: '.'
      mask:
        description: 'File mask for requirements*.txt file(s)'
        required: false
        type: string
        default: 'requirements*.txt'

  workflow_dispatch:
    inputs:
      # checkov:skip=CKV_GHA_7
      dir:
        description: 'Directory containing the requirements.txt file'
        required: false
        type: string
        default: '.'
      mask:
        description: 'File mask for requirements*.txt file(s)'
        required: false
        type: string
        default: 'requirements*.txt'

jobs:
  job:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -v -x {0}
        # shell: bash --noprofile --norc -e -o pipefail -v -x {0}
    strategy:
      fail-fast: false
      max-parallel: 1
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners
      matrix:
        os:
          - ubuntu-latest # aka ubuntu-22.04
          - windows-latest # aka windows-2022
          # - macos-latest # aka macos-12 (macos-13 in beta)
        python-version:
          - '3.10'
          - '3.11'
    steps:
      - name: USES actions/setup-python@v4.7.0
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
          # see https://stackoverflow.com/questions/73789054/reusable-github-action-workflow-with-actions-setup-python-fails-because-it-cant
          # cache: 'pip'

      - name: RUN pip install --upgrade pip
        run:  python -m pip install --upgrade pip

      - name: RUN pip install pipdeptree pipreqs pur
        run: python -m pip install pipdeptree pipreqs pur

      - name: USES actions/checkout@v3.5.3
        uses: actions/checkout@v3.5.3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: RUN sed -E -i.bak -e "/^#/d; /^$/d;" requirements.txt
        run: |
          mapfile -t < <(find '${{ inputs.dir }}' -type f -iname '${{ inputs.mask }}')
          for file in "${MAPFILE[@]}"; do
            sed -E -i.bak -e '/^#/d; /^$/d;' "${file}"
            cat "${file}"
          done

      - name: RUN pipreqs --print --diff requirements.txt
        continue-on-error: true
        run: |
          mapfile -t < <(find '${{ inputs.dir }}' -type f -iname '${{ inputs.mask }}')
          for file in "${MAPFILE[@]}"; do
            python -m pipreqs.pipreqs --print --diff "${file}"
          done

      - name: RUN pur --dry-run --dry-run-changed --no-recursive --requirement requirements.txt
        continue-on-error: true
        run: |
          mapfile -t < <(find '${{ inputs.dir }}' -type f -iname '${{ inputs.mask }}')
          for file in "${MAPFILE[@]}"; do
            python -m pur --dry-run --dry-run-changed --no-recursive --requirement "${file}" | tee pur.tmp
            test -s pur.tmp || continue
            printf 'Changes found, aborting...\n'
            exit 1
          done

      - name: RUN pur --no-recursive --requirement requirements.txt
        continue-on-error: true
        run: |
          mapfile -t < <(find '${{ inputs.dir }}' -type f -iname '${{ inputs.mask }}')
          for file in "${MAPFILE[@]}"; do
            {
              python -m pur --no-recursive --requirement "${file}" | 
              grep -q 'All requirements up-to-date'
            } || continue
            printf "Changes found, aborting...\n"
            exit 1
          done

      - name: RUN pip install -r requirements.txt
        continue-on-error: true
        run: |
          mapfile -t < <(find '${{ inputs.dir }}' -type f -iname '${{ inputs.mask }}')
          for file in "${MAPFILE[@]}"; do
            python -m pip install -r "${file}"
          done

      - name: RUN pipdeptree --warn silence
        continue-on-error: true
        run: |
          cd '${{ inputs.dir }}'
          pipdeptree --warn silence

      - name: RUN pipdeptree --freeze --warn silence | grep -E '^[a-zA-Z0-9\-]+'
        continue-on-error: true
        run: |
          cd '${{ inputs.dir }}'
          pipdeptree --freeze --warn silence | grep -E '^[a-zA-Z0-9\-]+'

# cSpell:ignore MAPFILE, mapfile, noprofile, norc, pipefail, pipreqs, pydeps, pipdeptree, pur

# eof
